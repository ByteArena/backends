// Code generated by easyjson for marshaling/unmarshaling. DO NOT EDIT.

package deathmatch

import (
	json "encoding/json"
	easyjson "github.com/mailru/easyjson"
	jlexer "github.com/mailru/easyjson/jlexer"
	jwriter "github.com/mailru/easyjson/jwriter"
)

// suppress unused package warning
var (
	_ *json.RawMessage
	_ *jlexer.Lexer
	_ *jwriter.Writer
	_ easyjson.Marshaler
)

func easyjsonA8da870DecodeGithubComBytearenaBytearenaGameDeathmatch(in *jlexer.Lexer, out *agentPerceptionVisionItem) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeString()
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "Tag":
			out.Tag = string(in.String())
		case "CloseEdge":
			if in.IsNull() {
				in.Skip()
			} else {
				in.Delim('[')
				v1 := 0
				for !in.IsDelim(']') {
					if v1 < 2 {
						out.CloseEdge[v1] = float64(in.Float64())
						v1++
					} else {
						in.SkipRecursive()
					}
					in.WantComma()
				}
				in.Delim(']')
			}
		case "Center":
			if in.IsNull() {
				in.Skip()
			} else {
				in.Delim('[')
				v2 := 0
				for !in.IsDelim(']') {
					if v2 < 2 {
						out.Center[v2] = float64(in.Float64())
						v2++
					} else {
						in.SkipRecursive()
					}
					in.WantComma()
				}
				in.Delim(']')
			}
		case "FarEdge":
			if in.IsNull() {
				in.Skip()
			} else {
				in.Delim('[')
				v3 := 0
				for !in.IsDelim(']') {
					if v3 < 2 {
						out.FarEdge[v3] = float64(in.Float64())
						v3++
					} else {
						in.SkipRecursive()
					}
					in.WantComma()
				}
				in.Delim(']')
			}
		case "Velocity":
			if in.IsNull() {
				in.Skip()
			} else {
				in.Delim('[')
				v4 := 0
				for !in.IsDelim(']') {
					if v4 < 2 {
						out.Velocity[v4] = float64(in.Float64())
						v4++
					} else {
						in.SkipRecursive()
					}
					in.WantComma()
				}
				in.Delim(']')
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonA8da870EncodeGithubComBytearenaBytearenaGameDeathmatch(out *jwriter.Writer, in agentPerceptionVisionItem) {
	out.RawByte('{')
	first := true
	_ = first
	if !first {
		out.RawByte(',')
	}
	first = false
	out.RawString("\"Tag\":")
	out.String(string(in.Tag))
	if !first {
		out.RawByte(',')
	}
	first = false
	out.RawString("\"CloseEdge\":")
	out.RawByte('[')
	for v5 := range in.CloseEdge {
		if v5 > 0 {
			out.RawByte(',')
		}
		out.Float64(float64(in.CloseEdge[v5]))
	}
	out.RawByte(']')
	if !first {
		out.RawByte(',')
	}
	first = false
	out.RawString("\"Center\":")
	out.RawByte('[')
	for v6 := range in.Center {
		if v6 > 0 {
			out.RawByte(',')
		}
		out.Float64(float64(in.Center[v6]))
	}
	out.RawByte(']')
	if !first {
		out.RawByte(',')
	}
	first = false
	out.RawString("\"FarEdge\":")
	out.RawByte('[')
	for v7 := range in.FarEdge {
		if v7 > 0 {
			out.RawByte(',')
		}
		out.Float64(float64(in.FarEdge[v7]))
	}
	out.RawByte(']')
	if !first {
		out.RawByte(',')
	}
	first = false
	out.RawString("\"Velocity\":")
	out.RawByte('[')
	for v8 := range in.Velocity {
		if v8 > 0 {
			out.RawByte(',')
		}
		out.Float64(float64(in.Velocity[v8]))
	}
	out.RawByte(']')
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v agentPerceptionVisionItem) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonA8da870EncodeGithubComBytearenaBytearenaGameDeathmatch(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v agentPerceptionVisionItem) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonA8da870EncodeGithubComBytearenaBytearenaGameDeathmatch(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *agentPerceptionVisionItem) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonA8da870DecodeGithubComBytearenaBytearenaGameDeathmatch(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *agentPerceptionVisionItem) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonA8da870DecodeGithubComBytearenaBytearenaGameDeathmatch(l, v)
}
func easyjsonA8da870DecodeGithubComBytearenaBytearenaGameDeathmatch1(in *jlexer.Lexer, out *agentPerceptionSpecs) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeString()
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "MaxSpeed":
			out.MaxSpeed = float64(in.Float64())
		case "MaxSteeringForce":
			out.MaxSteeringForce = float64(in.Float64())
		case "MaxAngularVelocity":
			out.MaxAngularVelocity = float64(in.Float64())
		case "VisionRadius":
			out.VisionRadius = float64(in.Float64())
		case "VisionAngle":
			out.VisionAngle = float64(in.Float64())
		case "DragForce":
			out.DragForce = float64(in.Float64())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonA8da870EncodeGithubComBytearenaBytearenaGameDeathmatch1(out *jwriter.Writer, in agentPerceptionSpecs) {
	out.RawByte('{')
	first := true
	_ = first
	if !first {
		out.RawByte(',')
	}
	first = false
	out.RawString("\"MaxSpeed\":")
	out.Float64(float64(in.MaxSpeed))
	if !first {
		out.RawByte(',')
	}
	first = false
	out.RawString("\"MaxSteeringForce\":")
	out.Float64(float64(in.MaxSteeringForce))
	if !first {
		out.RawByte(',')
	}
	first = false
	out.RawString("\"MaxAngularVelocity\":")
	out.Float64(float64(in.MaxAngularVelocity))
	if !first {
		out.RawByte(',')
	}
	first = false
	out.RawString("\"VisionRadius\":")
	out.Float64(float64(in.VisionRadius))
	if !first {
		out.RawByte(',')
	}
	first = false
	out.RawString("\"VisionAngle\":")
	out.Float64(float64(in.VisionAngle))
	if !first {
		out.RawByte(',')
	}
	first = false
	out.RawString("\"DragForce\":")
	out.Float64(float64(in.DragForce))
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v agentPerceptionSpecs) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonA8da870EncodeGithubComBytearenaBytearenaGameDeathmatch1(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v agentPerceptionSpecs) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonA8da870EncodeGithubComBytearenaBytearenaGameDeathmatch1(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *agentPerceptionSpecs) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonA8da870DecodeGithubComBytearenaBytearenaGameDeathmatch1(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *agentPerceptionSpecs) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonA8da870DecodeGithubComBytearenaBytearenaGameDeathmatch1(l, v)
}
func easyjsonA8da870DecodeGithubComBytearenaBytearenaGameDeathmatch2(in *jlexer.Lexer, out *agentPerceptionInternal) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeString()
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "Energy":
			out.Energy = float64(in.Float64())
		case "Proprioception":
			out.Proprioception = float64(in.Float64())
		case "Velocity":
			if in.IsNull() {
				in.Skip()
			} else {
				in.Delim('[')
				v9 := 0
				for !in.IsDelim(']') {
					if v9 < 2 {
						out.Velocity[v9] = float64(in.Float64())
						v9++
					} else {
						in.SkipRecursive()
					}
					in.WantComma()
				}
				in.Delim(']')
			}
		case "Magnetoreception":
			out.Magnetoreception = float64(in.Float64())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonA8da870EncodeGithubComBytearenaBytearenaGameDeathmatch2(out *jwriter.Writer, in agentPerceptionInternal) {
	out.RawByte('{')
	first := true
	_ = first
	if !first {
		out.RawByte(',')
	}
	first = false
	out.RawString("\"Energy\":")
	out.Float64(float64(in.Energy))
	if !first {
		out.RawByte(',')
	}
	first = false
	out.RawString("\"Proprioception\":")
	out.Float64(float64(in.Proprioception))
	if !first {
		out.RawByte(',')
	}
	first = false
	out.RawString("\"Velocity\":")
	out.RawByte('[')
	for v10 := range in.Velocity {
		if v10 > 0 {
			out.RawByte(',')
		}
		out.Float64(float64(in.Velocity[v10]))
	}
	out.RawByte(']')
	if !first {
		out.RawByte(',')
	}
	first = false
	out.RawString("\"Magnetoreception\":")
	out.Float64(float64(in.Magnetoreception))
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v agentPerceptionInternal) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonA8da870EncodeGithubComBytearenaBytearenaGameDeathmatch2(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v agentPerceptionInternal) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonA8da870EncodeGithubComBytearenaBytearenaGameDeathmatch2(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *agentPerceptionInternal) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonA8da870DecodeGithubComBytearenaBytearenaGameDeathmatch2(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *agentPerceptionInternal) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonA8da870DecodeGithubComBytearenaBytearenaGameDeathmatch2(l, v)
}
func easyjsonA8da870DecodeGithubComBytearenaBytearenaGameDeathmatch3(in *jlexer.Lexer, out *agentPerceptionExternal) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeString()
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "Vision":
			if in.IsNull() {
				in.Skip()
				out.Vision = nil
			} else {
				in.Delim('[')
				if out.Vision == nil {
					if !in.IsDelim(']') {
						out.Vision = make([]agentPerceptionVisionItem, 0, 1)
					} else {
						out.Vision = []agentPerceptionVisionItem{}
					}
				} else {
					out.Vision = (out.Vision)[:0]
				}
				for !in.IsDelim(']') {
					var v11 agentPerceptionVisionItem
					(v11).UnmarshalEasyJSON(in)
					out.Vision = append(out.Vision, v11)
					in.WantComma()
				}
				in.Delim(']')
			}
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonA8da870EncodeGithubComBytearenaBytearenaGameDeathmatch3(out *jwriter.Writer, in agentPerceptionExternal) {
	out.RawByte('{')
	first := true
	_ = first
	if !first {
		out.RawByte(',')
	}
	first = false
	out.RawString("\"Vision\":")
	if in.Vision == nil && (out.Flags&jwriter.NilSliceAsEmpty) == 0 {
		out.RawString("null")
	} else {
		out.RawByte('[')
		for v12, v13 := range in.Vision {
			if v12 > 0 {
				out.RawByte(',')
			}
			(v13).MarshalEasyJSON(out)
		}
		out.RawByte(']')
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v agentPerceptionExternal) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonA8da870EncodeGithubComBytearenaBytearenaGameDeathmatch3(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v agentPerceptionExternal) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonA8da870EncodeGithubComBytearenaBytearenaGameDeathmatch3(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *agentPerceptionExternal) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonA8da870DecodeGithubComBytearenaBytearenaGameDeathmatch3(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *agentPerceptionExternal) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonA8da870DecodeGithubComBytearenaBytearenaGameDeathmatch3(l, v)
}
func easyjsonA8da870DecodeGithubComBytearenaBytearenaGameDeathmatch4(in *jlexer.Lexer, out *agentPerception) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeString()
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "Specs":
			(out.Specs).UnmarshalEasyJSON(in)
		case "External":
			(out.External).UnmarshalEasyJSON(in)
		case "Internal":
			(out.Internal).UnmarshalEasyJSON(in)
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjsonA8da870EncodeGithubComBytearenaBytearenaGameDeathmatch4(out *jwriter.Writer, in agentPerception) {
	out.RawByte('{')
	first := true
	_ = first
	if !first {
		out.RawByte(',')
	}
	first = false
	out.RawString("\"Specs\":")
	(in.Specs).MarshalEasyJSON(out)
	if !first {
		out.RawByte(',')
	}
	first = false
	out.RawString("\"External\":")
	(in.External).MarshalEasyJSON(out)
	if !first {
		out.RawByte(',')
	}
	first = false
	out.RawString("\"Internal\":")
	(in.Internal).MarshalEasyJSON(out)
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v agentPerception) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjsonA8da870EncodeGithubComBytearenaBytearenaGameDeathmatch4(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v agentPerception) MarshalEasyJSON(w *jwriter.Writer) {
	easyjsonA8da870EncodeGithubComBytearenaBytearenaGameDeathmatch4(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *agentPerception) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjsonA8da870DecodeGithubComBytearenaBytearenaGameDeathmatch4(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *agentPerception) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjsonA8da870DecodeGithubComBytearenaBytearenaGameDeathmatch4(l, v)
}
